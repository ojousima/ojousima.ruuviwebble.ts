{"version":3,"sources":["ng://angular-ruuvi-endpoints/lib/angular-ruuvi-endpoints.service.ts","ng://angular-ruuvi-endpoints/lib/angular-ruuvi-endpoints.component.ts","ng://angular-ruuvi-endpoints/lib/ruuvi-endpoints/ruuvi-endpoints.component.ts","ng://angular-ruuvi-endpoints/lib/angular-ruuvi-endpoints.module.ts"],"names":["AngularRuuviEndpointsService","Injectable","args","providedIn","AngularRuuviEndpointsComponent","prototype","ngOnInit","Component","selector","template","RuuviEndpointsComponent","Acceleration","AccelerationX","AccelerationY","AccelerationZ","AdcBattery","Temperature","Humidity","Pressure","Environmental","Rtc","SensorConfigurationWrite","SensorConfigurationRead","SensorOffsetWrite","SensorOffsetRead","LogConfigurationWrite","LogConfigurationRead","ValueWrite","ValueRead","TypeError","AngularRuuviEndpointsModule","this","destinationIndex","sourceIndex","typeIndex","payloadIndex","payloadLength","destination","rawData","getUint8","source","type","payload","DataView","buffer","enumToKeys","e","Object","keys","filter","isNaN","NgModule","declarations","imports","exports"],"mappings":"sSAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,8BACVC,SAAU,0GAcZL,EAlBA,GCAAM,EAAA,WASE,SAAAA,KAKF,OAHEA,EAAAL,UAAAC,SAAA,iCATDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,sBACVC,SAAA,wFAUFC,EAdA,MCKEC,aAAA,GACAC,cAAA,GACAC,cAAA,GACAC,cAAA,GACAC,WAAA,GACAC,YAAA,GACAC,SAAA,GACAC,SAAA,GACAC,cAAA,GACAC,IAAA,qTAIAC,yBAAA,EACAC,wBAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,sBAAA,EACAC,qBAAA,EACAC,WAAA,EACAC,UAAA,EACAC,UAAA,iZAWF,SAAAC,IAQmBC,KAAAC,iBAAmB,EACnBD,KAAAE,YAAmB,EACnBF,KAAAG,UAAmB,EACnBH,KAAAI,aAAmB,EACnBJ,KAAAK,cAAmB,EAuBtC,OArBEN,EAAAzB,UAAAgC,YAAA,SAAYC,GACV,OAAOA,EAAQC,SAASR,KAAKC,mBAG/BF,EAAAzB,UAAAmC,OAAA,SAAOF,GACL,OAAOA,EAAQC,SAASR,KAAKE,cAG/BH,EAAAzB,UAAAoC,KAAA,SAAKH,GACH,OAAOA,EAAQC,SAASR,KAAKG,YAG/BJ,EAAAzB,UAAAqC,QAAA,SAAQJ,GACN,OAAO,IAAIK,SAASL,EAAQM,OAAQb,KAAKI,aAAcJ,KAAKK,gBAG9DN,EAAAzB,UAAAwC,WAAA,SAAWC,GAET,OAAOC,OAAOC,KAAKF,GAAGG,OAAM,SAAER,GAAS,OAAAS,MAAK,0BAhC/CC,EAAAA,SAAQjD,KAAA,CAAC,CACRkD,aAAc,CAAChD,EAAgCM,GAC/C2C,QAAS,GAETC,QAAS,CAAClD,OA+BZ0B","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularRuuviEndpointsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-angular-ruuvi-endpoints',\n  template: `\n    <p>\n      angular-ruuvi-endpoints works!\n    </p>\n  `,\n  styles: []\n})\nexport class AngularRuuviEndpointsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ruuvi-endpoints',\n  templateUrl: './ruuvi-endpoints.component.html',\n  styleUrls: ['./ruuvi-endpoints.component.css']\n})\nexport class RuuviEndpointsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularRuuviEndpointsComponent } from './angular-ruuvi-endpoints.component';\nimport { RuuviEndpointsComponent } from './ruuvi-endpoints/ruuvi-endpoints.component';\n\nexport enum RuuviEndpoint {\n  Acceleration  = 0x4A, //!< XYZ acceleration combined\n  AccelerationX = 0x40, //!< X acceleration\n  AccelerationY = 0x41, //!< Y acceleration\n  AccelerationZ = 0x42, //!< Z acceleration\n  AdcBattery    = 0x20, //!< ADC battery vs GND\n  Temperature   = 0x30, //!< Temperature\n  Humidity      = 0x31, //!< Humidity\n  Pressure      = 0x32, //!< Pressure\n  Environmental = 0x3A, //!< Temperature, humidity, air pressure combined.\n  Rtc           = 0x21  //!< RTC value\n}\n\nexport enum RuuviCommand {\n  SensorConfigurationWrite = (0x02),\n  SensorConfigurationRead  = (0x03),\n  SensorOffsetWrite        = (0x04),\n  SensorOffsetRead         = (0x05),\n  LogConfigurationWrite    = (0x06),\n  LogConfigurationRead     = (0x07),\n  ValueWrite               = (0x08), //!< Sensor reads are acknowledged by setting type as value write\n  ValueRead                = (0x09),\n  TypeError                = (0xFF) //!< internal error has occured\n}\n\nexport interface RuuviStandardMessage{\n\tdestination: RuuviEndpoint,\n\tsource:      RuuviEndpoint,\n\ttype:        RuuviCommand,\n  payload:     DataView\n}\n\n\n@NgModule({\n  declarations: [AngularRuuviEndpointsComponent, RuuviEndpointsComponent],\n  imports: [\n  ],\n  exports: [AngularRuuviEndpointsComponent]\n})\nexport class AngularRuuviEndpointsModule { \n\n  private readonly destinationIndex = 0;\n  private readonly sourceIndex      = 1;\n  private readonly typeIndex        = 2;\n  private readonly payloadIndex     = 3;\n  private readonly payloadLength    = 8;\n\n  destination(rawData: DataView) {\n    return rawData.getUint8(this.destinationIndex);\n  }\n\n  source(rawData: DataView) {\n    return rawData.getUint8(this.sourceIndex);\n  }\n\n  type(rawData: DataView) {\n    return rawData.getUint8(this.typeIndex);\n  }\n\n  payload(rawData: DataView) {\n    return new DataView(rawData.buffer, this.payloadIndex, this.payloadLength);\n  }\n\n  enumToKeys(e: any)\n  {\n    return Object.keys(e).filter((type) => isNaN(<any>type));\n  }\n\n}"]}